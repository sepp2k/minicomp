if-then-else:
  compile:
    source: |
      x = read;
      if x % 2 == 0 then
        print x+1;
      else
        print x-1;
      end
  run:
    - input: |
        43
      stdout: |
        42
    - input: |
        22
      stdout: |
        23
if-then-without-else:
  compile:
    source: |
      x = read;
      if x % 2 != 0 && x >= 0 || x == -13 then
        print x+1;
      end
  run:
    - input: |
        41
      stdout: |
        42
    - input: |
        22
      stdout: ""
    - input: |
        -23
      stdout: ""
    - input: |
        -13
      stdout: |
        -12
short-circuiting:
  compile:
    source: |
      if read || read then
        print read;
      end
      if !(read && read) then
        print read;
      end
  run:
    - input: |
        1
        2
        0
        4
      stdout: |
        2
        4
    - input: |
        0
        1
        2
        3
        0
        5
      stdout: |
        2
        5
short-circuiting2:
  compile:
    source: |
      print read || read;
      print read && read;
  run:
    - input: |
        1
        0
      stdout: |
        1
        0
    - input: |
        0
        1
        2
        3
      stdout: |
        1
        3
fac:
  compile:
    source: |
      n = read;
      fac = 1;
      for i = 1 to n do
        fac = fac * i;
      end
      print fac;
  run:
    - input: |
        0
      stdout: |
        1
    - input: |
        5
      stdout: |
        120
fib:
  compile:
    source: |
      max = read;
      if max >= 0 then
        print 0;
      end
      prev = 0;
      cur = 1;
      while cur <= max do
        print cur;
        tmp = prev;
        prev = cur;
        cur = cur + tmp;
      end
  run:
    - input: |
        -1
      stdout: ""
    - input: |
        0
      stdout: |
        0
    - input: |
        1
      stdout: |
        0
        1
        1
    - input: |
        5
      stdout: |
        0
        1
        1
        2
        3
        5
step:
  compile:
    source: |
      for i = 1 to 10 by 2 do
        print i;
      end
  run:
    stdout: |
      1
      3
      5
      7
      9
changing-the-loop-variable:
  compile:
    source: |
      for i = 10 to 15 do
        print i;
        # Skip 13
        if i == 12 then i = i + 1; end
      end
  run:
    stdout: |
      10
      11
      12
      14
      15
empty-loop:
  compile:
    source: |
      for i = 1 to 0 do
        print i;
      end
  run:
    stdout: ""
side-effects-in-loop-bounds:
  compile:
    source: |
      for i = read to read by read do
        print i;
      end
  run:
    input: |
      23
      42
      7
    stdout: |
      23
      30
      37
